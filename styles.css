:root {
    font-family: 'Handjet', sans-serif;
    overflow-y: hidden;
    --accent-color: rgb(80, 183, 249);
}

body {
    background-color: rgb(34, 34, 34);
    color: whitesmoke;
    /* background: url("images/bgOG.png"); */
    background: #143748 url("images/bg.png") no-repeat center center/cover;

}

h1 {
    font-size: 6em;
    margin: auto;
}

h2 {
    font-size: 3em;
    margin: auto;
}

input {
    box-sizing: border-box
}

.startBtn {
    font-family: 'Handjet', sans-serif;
    background-color: #222222;
    color: whitesmoke;
    padding: 12px 24px;
    /* Spacious padding for a clean appearance */
    font-size: 3vw;
    /* Slightly larger text for readability */
    border: #333333 solid 1px;
    /* Fixed border syntax */
    border-radius: 4px;
    /* Slightly rounded corners for a modern touch */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    /* Subtle shadow for depth */
    transition: all 0.3s ease;
    /* Smooth hover transitions */
    cursor: pointer;
    margin: 2px;
    position: relative;
    /* Ensure positioning for floating effect */
    width: 100%;
}

button.startBtn:hover,
input[type="submit"].startBtn:hover {
    background-color: #333333;
    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
    /* More shadow on hover */
    animation: float 1s infinite;
    /* Start floating animation on hover */
}

.startBtn:active {
    background-color: #0f0f0f;
    /* Darker background on click */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    /* Smaller shadow when clicked */
    transform: translateY(0);
    /* Reset lift */
    animation: none;
    /* Stop animation when button is clicked */
}

.closeBtn {
    position: absolute;
    /* Positioning relative to the nearest positioned ancestor */
    top: 10px;
    /* Distance from the top */
    right: 10px;
    /* Distance from the right */
    background-color: transparent;
    /* Transparent background */
    border: none;
    /* No border */
    color: whitesmoke;
    /* Text color */
    font-size: 20px;
    /* Font size */
    cursor: pointer;
    /* Pointer on hover */
    transition: color 0.3s ease;
    /* Smooth color transition */
}

.closeBtn:hover {
    color: lightgray;
}

.options-tab {
    position: fixed;
    left: 50%;
    top: 50%;
    /* Start from the center */
    transform: translate(-50%, -50%);
    /* Center the tab */
    width: 100%;
    max-width: 600px;
    background-color: #000000;
    padding: 20px;
    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);
    transition: top 0.3s ease, opacity 0.3s ease;
    z-index: 2;
    /* Above the overlay */
    opacity: 0;
    /* Hidden by default */
    display: none;
    border-radius: 4px;
}

.options-tab.open {
    opacity: 0.9;
    display: block;
    /* Make it visible when open */
}

.slider-container {
    margin-top: 10px;
}

.slider-container label {
    display: block;
    margin-bottom: 5px;
}

.slider-container input[type="range"] {
    width: 100%;
    max-width: 500px;
    /* Limit slider width */
}

/* Full-screen overlay */
.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    /* Full width */
    height: 100vh;
    /* Full height */
    background-color: rgba(0, 0, 0, 0.5);
    /* Dim background */
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
    z-index: 1;
    /* Below the options tab */
}

.overlay.active {
    opacity: 1;
    visibility: visible;
    /* Make it visible when active */
}

/* Keyframes for floating animation */
@keyframes float {

    0%,
    100% {
        transform: translateY(0);
        /* Original position */
    }

    50% {
        transform: translateY(-2px);
        /* Float upwards */
    }
}

#playerList>li {
    margin: 1vw;
    display: block;
    width: 70vw;
    height: auto;

    background-color: #222222;
    color: whitesmoke;
    padding: 12px 12px;
    /* Spacious padding for a clean appearance */
    font-size: 3vw;
    /* Slightly larger text for readability */
    border: #333333 solid 1px;
    border-radius: 4px;

    &>img {
        height: 1.1em;
        margin-right: 0.5em;
        vertical-align: middle;
        display: inline-block;
    }
}

/* .switch-toggle {
    float: left;
    background: #242729;
} */
.switch-toggle {
    font-family: 'Handjet', sans-serif;
    background-color: #222222;
    color: whitesmoke;
    /* padding: 12px 24px; */
    /* Spacious padding for a clean appearance */
    font-size: 3vw;
    /* Slightly larger text for readability */
    border: #333333 solid 1px;
    /* Fixed border syntax */
    border-radius: 4px;
    /* Slightly rounded corners for a modern touch */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    /* Subtle shadow for depth */
    transition: all 0.3s ease;
    /* Smooth hover transitions */
    cursor: pointer;
    margin: 2px;
    position: relative;
    /* Ensure positioning for floating effect */
    width: 70vw;
    /* height: min-content; */
    overflow: hidden;
}

.switch-toggle input {
    position: absolute;
    opacity: 0;
}

.switch-toggle input+label {
    padding: 7px;
    float: left;
    color: #fff;
    cursor: pointer;
    text-align: center;
    width: 48.2%;
    border-radius: 3px;
}

.switch-toggle input:checked+label {
    background-color: var(--accent-color);
}

input[type="checkbox"] {
    /* Add if not using autoprefixer */
    -webkit-appearance: none;
    /* Remove most all native input styles */
    appearance: none;
    /* Not removed via appearance */
    margin: 0;

    background-color: #222222;
    /* Slightly larger text for readability */
    border: #333333 solid 1px;
    /* Fixed border syntax */
    border-radius: 4px;

    font: inherit;
    color: currentColor;
    width: 1.15em;
    height: 1.15em;
    transform: translateY(-0.075em);

    display: grid;
    place-content: center;
}

input[type="checkbox"]::before {
    content: "";
    width: 0.65em;
    height: 0.65em;
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    transform: scale(0);
    transform-origin: bottom left;
    transition: 120ms transform ease-in-out;
    box-shadow: inset 1em 1em var(--accent-color);
    /* Windows High Contrast Mode */
    background-color: CanvasText;
}

input[type="checkbox"]:checked::before {
    transform: scale(1);
}